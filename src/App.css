@tailwind base;
@tailwind components;
@tailwind utilities;

#root {
  margin: 0 auto;
  text-align: center;
}

.App {
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.TodoApp {
  width: 90vw;
  height: 450px;
  position: relative;

  max-width: 380px;
  overflow: hidden;
  background: #f8f9fa;
  border-radius: 15px;
}

.darkMode .TodoApp {
  @apply bg-slate-800;
}

.card {
  padding: 2em;
}

button {
  all: unset;
}

.ToggleGroup {
  display: inline-flex;
  background-color: var(--mauve-6);
  border-radius: 4px;
  box-shadow: 0 2px 10px var(--black-a7);
  margin: 16px;
}

.ToggleGroupItem {
  background-color: white;
  color: var(--mauve-11);
  height: 35px;
  width: 80px;

  display: flex;
  font-size: 15px;
  line-height: 1;
  align-items: center;
  justify-content: center;
  margin-left: 1px;
}
.ToggleGroupItem:first-child {
  margin-left: 0;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
.ToggleGroupItem:last-child {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}
.ToggleGroupItem:hover {
  background-color: var(--violet-3);
}
.ToggleGroupItem[data-state="on"] {
  background-color: var(--violet-5);
  color: var(--violet-11);
}
.ToggleGroupItem:focus {
  position: relative;
  box-shadow: 0 0 0 2px black;
}

.darkMode .ToggleGroupItem {
  @apply bg-slate-800 text-white;
}
.darkMode .ToggleGroupItem:hover {
  @apply bg-slate-500;
}
.darkMode .ToggleGroupItem[data-state="on"] {
  @apply bg-slate-600;
}

.TodoList {
  height: 78%;
  text-align: start;

  overflow-y: auto;
  scroll-behavior: smooth;
  padding: 3px 0px;
}

.TodoRow {
  display: inline-flex;
  align-items: center;
  gap: 15px;
  padding: 8px 15px;
}
.TodoRow > button:last-child {
  width: 20px;
  height: 20px;

  display: inline-flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(223, 82, 82);
  color: white;
  font-size: 2px;
  border-radius: 50%;
  border-width: 2px;
  border-color: white;
  padding: 2px;
  opacity: 0;
}
.TodoRow .TodoText {
  min-width: 90px;
  text-align: start;
}
.TodoRow:hover > button:last-child {
  opacity: 1;
}

.CheckboxRoot {
  background-color: white;
  min-width: 25px;
  height: 25px;
  margin-left: 5px;

  border-radius: 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 10px var(--black-a7);
}
.CheckboxRoot[data-state="checked"] ~ * {
  text-overflow: ellipsis;
  text-decoration: line-through;
  color: var(--mauve-11);
}
.CheckboxRoot:hover {
  background-color: var(--violet-3);
}
.CheckboxRoot:focus {
  box-shadow: 0 0 0 2px black;
}
.darkMode .CheckboxRoot {
  @apply bg-slate-600;
}

.CheckboxIndicator {
  color: var(--violet-11);
}
.darkMode .CheckboxIndicator {
  color: white;
}

input,
textarea,
button {
  all: unset;
  box-sizing: border-box;
}

.FormRoot {
  width: 100%;
  padding: 0 20px;
}

.FormField {
  display: grid;
  margin-bottom: 20px;
  position: relative;
}

.FormMessage {
  position: absolute;
  transform: translateX(-50%);
  left: 50%;
  bottom: -25px;
  font-size: 13px;
  color: var(--violet-11);
  opacity: 0.8;
}
.darkMode .FormMessage {
  color: white;
}

.Input {
  width: 100%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;

  font-size: 15px;
  background-color: var(--black-a5);
  box-shadow: 0 0 0 1px var(--black-a9);
}
.Input:hover {
  box-shadow: 0 0 0 1px black;
}
.Input:focus {
  box-shadow: 0 0 0 2px black;
}
.Input::selection {
  background-color: var(--black-a9);
  color: white;
}

.Input {
  padding: 0 10px;
  height: 35px;
  line-height: 1;
}
.darkMode .Input {
  box-shadow: 0 0 0 1px white;
}
.darkMode .Input::selection {
  @apply bg-slate-300 text-black;
}

.FormRoot .Button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  padding: 0 15px;
  font-size: 15px;
  line-height: 1;
  font-weight: 500;
  height: 35px;
  width: 100%;

  background-color: white;
  color: var(--violet-11);
  box-shadow: 0 2px 10px var(--black-a7);
}
.FormRoot .Button:hover {
  background-color: var(--mauve-3);
}
.FormRoot .Button:focus {
  box-shadow: 0 0 0 2px black;
}
.darkMode .Button {
  @apply bg-slate-700 text-white;
}
.darkMode .Button:hover {
  @apply bg-slate-600;
}

.AlertDialogOverlay {
  position: fixed;
  inset: 0;
  animation: overlayShow 250ms cubic-bezier(0.16, 1, 0.3, 1);
}

.AlertDialogContent {
  background-color: white;
  border-radius: 6px;
  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;
  max-width: 300px;
  max-height: 85vh;
  padding: 25px;
  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.darkMode .AlertDialogContent {
  @apply bg-slate-700;
}

.AlertDialogContentTitle {
  text-align: center;
  margin: 0;
  color: var(--black-a7);
  font-size: 17px;
  font-weight: 500;
}

.AlertDialogBtnContainer {
  margin-top: 50px;
  display: flex;
  justify-content: space-between;
  gap: 30px;
  padding: 0px 5px;
}

.AlertDialogBtnContainer Button {
  padding: 4px 10px;
  min-width: 100px;
  max-width: 200px;
  border-radius: 6px;
}
.AlertDialogBtnContainer Button:first-child {
  @apply bg-neutral-200;
}
.AlertDialogBtnContainer Button:last-child {
  @apply bg-red-400 text-white;
}
.AlertDialogBtnContainer Button:hover {
  background: var(--violet-5);
  color: black;
}
.darkMode .AlertDialogBtnContainer Button:hover {
  background: white;
  color: black;
  border-radius: 6px;
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

.SwitchRoot {
  width: 42px;
  height: 25px;
  background-color: var(--black-a9);
  border-radius: 9999px;
  position: relative;
  box-shadow: 0 2px 10px var(--black-a7);
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  transition: background-color 250ms;
}
.SwitchRoot:focus {
  box-shadow: 0 0 0 2px black;
}
.SwitchRoot[data-state="checked"] {
  background-color: black;
}

.SwitchThumb {
  display: block;
  width: 21px;
  height: 21px;
  background-color: white;
  border-radius: 9999px;
  box-shadow: 0 2px 2px var(--black-a7);
  transition: transform 250ms;
  transform: translateX(2px);
  will-change: transform;
}
.SwitchThumb[data-state="checked"] {
  transform: translateX(19px);
}

.Label {
  font-size: 15px;
  line-height: 1;
}

.footer__btnContainer {
  display: inline-flex;
  gap: 50px;
}
.footer__btnContainer button {
  padding: 4px 10px;
  min-width: 100px;
  max-width: 200px;
  border-radius: 6px;
}
